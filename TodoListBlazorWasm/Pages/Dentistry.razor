@page "/dentistry"
@using TodoList.Models
@using TodoListBlazorWasm.Services
@inject IConfiguration Configuration
@inject IToastService toastService

@if(Patients == null)
{
    <div>loading</div>
}
else
{
    <div>
        <div class="titleLayout">
            <h3>Danh sách bệnh nhân</h3>
            <button type="submit" class="btn btn-primary" @onclick="()=>OpenAddPatientPopup()">
                @* <i class="ri-add-line"></i> *@
                <i class="ri-user-add-line"></i>
                Thêm bệnh nhân
            </button>
        </div>

        <table class="table mt-3">
            <thead>
                <tr>
                    <th>Họ và tên</th>
                    <th>Giới tính</th>
                    <th>Ngày sinh</th>
                    <th>Nghề nghiệp</th>
                    <th>Số điện thoại</th>
                    <th>Địa chỉ</th>
                    <th>Ngày tạo</th>
                    <th width="15%"></th>
                </tr>
            </thead>
            <tbody class="justify-content-center align-items-sm-center">
                @foreach (var item in Patients)
                {
                    <tr>
                        <td class="align-middle">@item.Name</td>
                        <td class="align-middle">@item.Gender</td>
                        <td class="align-middle">@item.DateOfBirth.ToString(Configuration["DateTimeFormat"])</td>
                        <td class="align-middle">@item.Job</td>
                        <td class="align-middle">@item.PhoneNumber</td>
                        <td class="align-middle">@item.Address</td>
                        <td class="align-middle">@item.CreatedDate.ToString(Configuration["DateTimeFormat"])</td>
                        <td>
                            <a href="/patientDetails/@item.PatientId" class="btn btn-outline-primary">
                                <i class="ri-user-3-line"></i>
                                Bệnh nhân
                            </a>
                            @* <button class="btn btn-outline-primary" @onclick="()=>OpenEditPatientPopup(item)">
                    <i class="ri-edit-line"></i>
                    Sửa
                    </button> *@
                            <button class="btn btn-primary">
                                <i class="ri-delete-bin-line"></i>
                                Xoá
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <PatientAddDentistry @ref="addPatientDialog" OnPatientAdded="AddPatientToList" />

    @* <PatientEditDentistry @ref="editPatientDialog" /> *@
}

@code {
    private PatientRequest patientModel = new PatientRequest();
    private PatientUpdateRequest patientUpdateModel = new PatientUpdateRequest();
    private TreatProgressRequest treatProgressModel = new TreatProgressRequest();
    private bool ShowError = true;

    protected PatientAddDentistry addPatientDialog { get; set; }
    // protected PatientEditDentistry editPatientDialog { get; set; }

    private DateTime dateOfBirth = DateTime.Now.AddDays(0);
    private DateTime createdDate = DateTime.Today.AddMinutes(0);

    public void OpenAddPatientPopup()
    {
        addPatientDialog.Show();
    }

    [Inject] private IPatientApiClient PatientApiClient { set; get; }

    private List<PatientRequest> Patients;

    protected override async Task OnInitializedAsync()
    {
        Patients = await PatientApiClient.GetPatientList();
    }

    private void AddPatientToList(PatientRequest newPatient)
    {
        Patients.Add(newPatient);
        StateHasChanged(); //Cập nhật bảng khi 1 bệnh nhân được thêm mới
    }
}
