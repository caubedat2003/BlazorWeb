@using TodoList.Models
@using TodoListBlazorWasm.Services
@inject IPatientApiClient PatientApiClient
@inject IToastService toastService

<div class="modal-overlay @(ShowDialog ? "show" : "")"></div>

<div class="modal fade @(ShowDialog ? "show d-block" : "fade")" id="dentisModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">

        <EditForm Model="patientUpdateModel" OnSubmit="HandleEditPatient">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modaltitle">Chỉnh sửa thông tin bệnh nhân</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" @onclick="()=>Hide()" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="row mb-2">
                        <div class="col-sm-4">
                            <label for="Name">Họ và tên:</label>
                            <InputText id="Name" class="form-control" @bind-Value="patientUpdateModel.Name"></InputText>
                        </div>
                        <div class="col-sm-4">
                            <label for="PhoneNumber">Số điện thoại:</label>
                            <InputText id="PhoneNumber" class="form-control" @bind-Value="patientUpdateModel.PhoneNumber"></InputText>
                        </div>
                        <div class="col-sm-4">
                            <label for="Gender">Giới tính:</label>
                            <InputText id="Gender" class="form-control" @bind-Value="patientUpdateModel.Gender"></InputText>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-4">
                            <label for="DateOfBirth">Ngày sinh:</label>
                            <InputDate TValue="DateTime" id="DateOfBirth" class="form-control" @bind-Value="@dateOfBirth"></InputDate>
                        </div>
                        <div class="col-sm-8">
                            <label for="Job">Nghề nghiệp:</label>
                            <InputText id="Job" class="form-control" @bind-Value="patientUpdateModel.Job"></InputText>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-12">
                            <label for="Address">Địa chỉ:</label>
                            <InputText id="Address" class="form-control" @bind-Value="patientUpdateModel.Address"></InputText>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" @onclick="()=>Hide()" data-bs-dismiss="modal">
                        <i class="ri-close-line"></i>
                        Đóng
                    </button>
                    <button class="btn btn-success" type="submit">
                        <i class="ri-save-3-line"></i>
                        Lưu
                    </button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public string patientId { get; set; }

    protected bool ShowDialog { get; set; }
    private PatientUpdateRequest patientUpdateModel = new PatientUpdateRequest();

    private DateTime dateOfBirth = DateTime.Now.AddDays(0);

    // protected async override Task OnInitializedAsync()
    // {
    //     var patient = await PatientApiClient.GetPatientDetail(patientId);
    //     if (patient != null)
    //     {
    //         patientUpdateModel = new PatientUpdateRequest
    //             {
    //                 Name = patient.Name,
    //                 Gender = patient.Gender,
    //                 PhoneNumber = patient.PhoneNumber,
    //                 Address = patient.Address,
    //                 DateOfBirth = patient.DateOfBirth,
    //                 Job = patient.Job
    //             };
    //         dateOfBirth = patient.DateOfBirth; 
    //     }
    //     else
    //     {
    //         toastService.ShowError("Unable to load patient details.");
    //     }
    // }

    private async Task HandleEditPatient(EditContext context)
    {
        // patientUpdateModel.DateOfBirth = dateOfBirth;
        // var result = await PatientApiClient.UpdatePatient(Guid.Parse(patientId), patientUpdateModel);
        // if (result)
        // {
        //     toastService.ShowSuccess($"{patientUpdateModel.Name} được sửa thành công");
        // }
        // else
        // {
        //     toastService.ShowError("Có lỗi xảy ra. Vui lòng liên hệ admin");
        // }
        // Hide();
    }
    public void Show()
    {
        ShowDialog = true;
        StateHasChanged();
    }
    private void Hide()
    {
        ShowDialog = false;
        StateHasChanged();
    }
}
