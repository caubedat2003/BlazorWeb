@page "/EditPatient/{patientId}"
@using TodoList.Models
@using TodoListBlazorWasm.Services
@using TodoList.Models.Enums
@inject IPatientApiClient PatientApiClient
@inject IToastService toastService
@inject NavigationManager NavigationManager

@if(Patient == null)
{
    <div>loading.......</div>
}
else
{
    <h3 class="mb-3">Chỉnh sửa thông tin bệnh nhân @Patient.Name</h3>
    <EditForm Model="Patient" OnSubmit="HandleEditPatient">
        <div class="row mb-2">
            <div class="col-sm-4">
                <label for="Name">Họ và tên:</label>
                <InputText id="Name" class="form-control" @bind-Value="Patient.Name"></InputText>
            </div>
            <div class="col-sm-4">
                <label for="PhoneNumber">Số điện thoại:</label>
                <InputText id="PhoneNumber" class="form-control" @bind-Value="Patient.PhoneNumber"></InputText>
            </div>
            <div class="col-sm-4">
                <label for="Gender">Giới tính:</label>
                <InputSelect id="Gender" class="form-label" @bind-Value="Patient.Gender">
                    @foreach(string gender in Enum.GetNames(typeof(Gender)))
                    {
                        <option value="@gender">@gender</option>
                    }
                </InputSelect>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-sm-4">
                <label for="DateOfBirth">Ngày sinh:</label>
                <InputDate TValue="DateTime" id="DateOfBirth" class="form-control" @bind-Value="@dateOfBirth"></InputDate>
            </div>
            <div class="col-sm-8">
                <label for="Job">Nghề nghiệp:</label>
                <InputText id="Job" class="form-control" @bind-Value="Patient.Job"></InputText>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-sm-12">
                <label for="Address">Địa chỉ:</label>
                <InputText id="Address" class="form-control" @bind-Value="Patient.Address"></InputText>
            </div>
        </div>

        <button class="btn btn-outline-secondary mt-2" type="button" @onclick="()=>BackBtn()">
            <i class="ri-arrow-left-line"></i>
            Quay lại
        </button>
        <button class="btn btn-success mt-2" type="submit">
            <i class="ri-save-3-line"></i>
            Lưu
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public string patientId { get; set; }

    private PatientUpdateRequest Patient { get; set; }

    private DateTime dateOfBirth { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var patientDto = await PatientApiClient.GetPatientDetail(patientId);
        Patient = new PatientUpdateRequest();
        Patient.Name = patientDto.Name;
        Patient.PhoneNumber = patientDto.PhoneNumber;
        Patient.Gender = patientDto.Gender;
        Patient.Job = patientDto.Job;
        Patient.Address = patientDto.Address;
        dateOfBirth = patientDto.DateOfBirth;
    }
    private async Task HandleEditPatient()
    {
        Patient.DateOfBirth = dateOfBirth;
        var result = await PatientApiClient.UpdatePatient(Guid.Parse(patientId), Patient);
        if (result)
        {
            toastService.ShowSuccess("Chỉnh sửa thông tin thành công");
            NavigationManager.NavigateTo("Dentistry");
        }
        else
        {
            toastService.ShowError("Có lỗi xảy ra. Vui lòng liên hệ admin");
        }
    }
    private void BackBtn()
    {
        NavigationManager.NavigateTo("Dentistry");
    }
}
